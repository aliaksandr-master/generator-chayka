<?php

namespace <%= phpNamespace %>;

use Chayka\Helpers\DateHelper;
use Chayka\Helpers\Util;
use Chayka\WP\Helpers\DbHelper;
use Chayka\WP\Models\ReadyModel;
use DateTime;

class <%= model %>Model extends ReadyModel{

    protected $title; 

    protected $dtCreated;

    function __construct() {
        $this->title = '';
        $this->dtCreated = new DateTime();
    }

    /**
     * Get db table name for the instance storage.
     *
     * @return string
     */
    public static function getDbTable() {
        return DbHelper::dbTable('<%= dbTable %>');
    }

    /**
     * Get id column name in db table
     *
     * @return mixed
     */
    public static function getDbIdColumn() {
        return '<%= dbIdColumn %>';
    }

    /**
     * @return string
     */
    public function getTitle() {
        return $this->title;
    }

    /**
     * @param string $title
     * @return $this
     */
    public function setTitle($title) {
        $this->title = $title;
        return $this;
    }

    /**
     * @return \DateTime
     */
    public function getDtCreated() {
        return $this->dtCreated;
    }

    /**
     * @param \DateTime $dtCreated
     * @return $this
     */
    public function setDtCreated($dtCreated) {
        $this->dtCreated = $dtCreated;
        return $this;
    }

    /**
     * Unpacks db result object into this instance
     *
     * @param array|object $dbRecord
     * @return self
     */
    public static function unpackDbRecord($dbRecord) {
        $obj = new self();

        $obj->setId(Util::getItem($dbRecord, '<%= dbIdColumn %>', 0));
        $obj->setTitle(Util::getItem($dbRecord, 'title', ''));
        $dtCreated = Util::getItem($dbRecord, 'dt_created', '');
        $obj->setDtCreated($dtCreated ? DateHelper::dbStrToDatetime($dtCreated) : new DateTime());

        return $obj;
    }

    /**
     * Packs this instance for db insert/update
     *
     * @param bool $forUpdate
     * @return array
     */
    public function packDbRecord($forUpdate = false) {
        $dbRecord = array(
            '<%= dbIdColumn %>' => $this->getId(),
            'title' => $this->getTitle(),
            'dt_created' => $this->dtCreated ? DateHelper::datetimeToDbStr($this->dtCreated) : null,
        );

        return $dbRecord;
    }

    /**
     * Returns assoc array to be packed into json payload
     *
     * @return array($key=>$value);
     */
    public function packJsonItem() {
        $json = array(
            '<%= dbIdColumn %>' => $this->getId(),
            'title' => $this->getTitle(),
            'dt_created' => $this->dtCreated ? DateHelper::datetimeToJsonStr($this->dtCreated) : null,
        );

        return $json;
    }
}